deploy:
  needs: build
  runs-on: ubuntu-latest
  steps:
    - name: Install SSH Client
      run: sudo apt-get update && sudo apt-get install -y openssh-client

    - name: Create SSH Key File
      run: |
        if [ "${{ github.event.inputs.environment }}" == "dev" ]; then
          echo "${{ secrets.DEV_EC2_SSH_KEY }}" > ssh_key.pem
          echo "${{ secrets.DEV_EC2_PUBLIC_IP }}" > ec2_public_ip.txt
        else
          echo "${{ secrets.PROD_EC2_SSH_KEY }}" > ssh_key.pem
          echo "${{ secrets.PROD_EC2_PUBLIC_IP }}" > ec2_public_ip.txt
        fi
        chmod 600 ssh_key.pem

    - name: SSH into EC2 and Deploy
      run: |
        EC2_PUBLIC_IP=$(cat ec2_public_ip.txt)
        
        ssh -o StrictHostKeyChecking=no -i ssh_key.pem ubuntu@$EC2_PUBLIC_IP << 'EOF'
        
        # 현재 실행 중인 포트를 확인
        ACTIVE_PORT=$(docker ps --format "{{.Ports}}" | grep -oE '808[12]' | head -n 1)
        echo "현재 활성 포트: $ACTIVE_PORT"
        
        if [ "$ACTIVE_PORT" == "8081" ]; then
          NEW_PORT=8082
        else
          NEW_PORT=8081
        fi
        
        echo "새 컨테이너를 $NEW_PORT 포트에서 실행"
        
        # 새 컨테이너 실행
        sudo docker pull yh0872/spoony-dev:latest
        sudo docker run -d -p $NEW_PORT:8080 --name spoony-dev-$NEW_PORT yh0872/spoony-dev
        
        echo "컨테이너 실행 완료. Nginx 재시작"
        
        # Nginx를 재시작하여 새 컨테이너로 트래픽 전환
        sudo systemctl restart nginx
        
        # 이전 컨테이너 종료 및 삭제
        if [ "$ACTIVE_PORT" != "" ]; then
          echo "이전 컨테이너 spoony-dev-$ACTIVE_PORT 종료 및 삭제"
          sudo docker stop spoony-dev-$ACTIVE_PORT
          sudo docker rm spoony-dev-$ACTIVE_PORT
        fi
        
        echo "배포 완료. 현재 활성 포트: $NEW_PORT"
        EOF
